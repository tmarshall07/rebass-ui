{"version":3,"sources":["../../../src/hooks/useDebounce.ts"],"names":["useState","useRef","useEffect","Debouncer","useDebounce","value","delay","debouncedValue","setDebouncedValue","debouncer","current","setValue"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;AAEA,OAAOC,SAAP,MAAsB,oBAAtB,C,CAEA;;AACA,SAASC,WAAT,CAAqBC,KAArB,EAAiCC,KAAK,GAAG,GAAzC,EAA8C;AAC5C;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAACK,KAAD,CAApD;AACA,QAAMI,SAAS,GAAGR,MAAM,CAAC,IAAIE,SAAJ,CAAcE,KAAd,EAAqBC,KAArB,CAAD,CAAxB;AAEAJ,EAAAA,SAAS,CACP,MAAM;AACJO,IAAAA,SAAS,CAACC,OAAV,CAAkBC,QAAlB,CAA2BN,KAA3B,EAAkC,MAAM;AACtCG,MAAAA,iBAAiB,CAACH,KAAD,CAAjB;AACD,KAFD;AAGD,GALM,EAMP,CAACA,KAAD,EAAQC,KAAR,CANO,CAMS;AANT,GAAT;AASA,SAAOC,cAAP;AACD;;AAED,eAAeH,WAAf","sourcesContent":["import { useState, useRef, useEffect } from 'react';\n\nimport Debouncer from '../class/debouncer';\n\n// Hook\nfunction useDebounce(value: any, delay = 500) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  const debouncer = useRef(new Debouncer(value, delay));\n\n  useEffect(\n    () => {\n      debouncer.current.setValue(value, () => {\n        setDebouncedValue(value);\n      });\n    },\n    [value, delay], // Only re-call effect if value or delay changes\n  );\n\n  return debouncedValue;\n}\n\nexport default useDebounce;\n"],"file":"useDebounce.js"}