{"version":3,"file":"Autocomplete.js","names":["React","useEffect","useRef","useState","useClickOutside","Box","Input","updateScroll","el","index","parent","children","child","childOffsetTop","offsetTop","parentScrollTop","scrollTop","parentHeight","offsetHeight","childHeight","scrollToY","scrollTo","Autocomplete","props","value","placeholder","items","menuProps","inputProps","onChange","onSelect","keyExtractor","renderItem","menuRef","menuVisible","setMenuVisible","focusedIndex","setFocusedIndex","current","containerRef","handleSelect","item","handleFocus","e","onFocus","handleKeyDown","newFocusedIndex","key","preventDefault","length","createElement","sx","position","ref","_extends","onKeyDown","bg","maxHeight","width","overflow","zIndex","marginTop","borderRadius","boxShadow","borderStyle","borderColor","borderWidth","map","i","onClick"],"sources":["../../../src/components/Autocomplete.tsx"],"sourcesContent":["import { InputProps } from '@rebass/forms';\nimport React, { ChangeEvent, KeyboardEvent, ReactChild, useEffect, useRef, useState } from 'react';\nimport useClickOutside from '../hooks/useClickOutside';\nimport Box, { BoxProps } from './Box';\nimport Input from './Input';\n\nexport type Item = { [index: string]: any };\n\nexport type AutocompleteProps = {\n  value: string;\n  items?: Item[];\n  placeholder?: string;\n  menuProps?: BoxProps;\n  inputProps?: InputProps;\n  keyExtractor: (item: Item) => string | number;\n  renderItem: (item: Item, hasFocus: boolean) => ReactChild;\n  onChange?: (e: ChangeEvent) => void;\n  onSelect?: (item: Item) => void;\n};\n\n/**\n * Update the scroll to show more items as the user arrows up or down\n *\n * @param {HTMLElement} el\n * @param {number} index\n */\nconst updateScroll = (el: HTMLElement, index: number): void => {\n  const parent = el;\n  if (parent?.children) {\n    const child = parent.children[index] as HTMLElement;\n    if (child) {\n      const childOffsetTop = child.offsetTop;\n      const parentScrollTop = parent.scrollTop;\n      const parentHeight = parent.offsetHeight;\n      const childHeight = child.offsetHeight;\n\n      if (childOffsetTop + childHeight > parentHeight + parentScrollTop) {\n        const scrollToY = childOffsetTop + childHeight - parentHeight;\n        parent.scrollTo(0, scrollToY);\n      } else if (childOffsetTop < parentScrollTop) {\n        parent.scrollTo(0, childOffsetTop);\n      }\n    }\n  }\n};\n\nconst Autocomplete = (props: AutocompleteProps): JSX.Element => {\n  const {\n    value,\n    placeholder,\n    items = [],\n    menuProps = {},\n    inputProps = {},\n    onChange,\n    onSelect,\n    keyExtractor,\n    renderItem,\n  } = props;\n\n  const menuRef = useRef<HTMLElement>();\n\n  const [menuVisible, setMenuVisible] = useState(false);\n  const [focusedIndex, setFocusedIndex] = useState(0);\n\n  // Handle using arrows to scroll up and down\n  useEffect(() => {\n    updateScroll(menuRef.current, focusedIndex);\n  }, [focusedIndex]);\n\n  const containerRef = useRef();\n\n  useClickOutside(containerRef, () => setMenuVisible(false));\n\n  const handleSelect = (item): void => {\n    setMenuVisible(false);\n    onSelect(item);\n  };\n\n  const handleFocus = (e): void => {\n    setMenuVisible(true);\n    inputProps.onFocus?.(e);\n  };\n\n  const handleKeyDown = (e: KeyboardEvent): void => {\n    let newFocusedIndex = focusedIndex;\n    switch (e.key) {\n      case 'ArrowUp': // Up\n        e.preventDefault();\n        if (!(focusedIndex - 1 < 0)) newFocusedIndex -= 1;\n        break;\n      case 'ArrowDown': // Down\n        e.preventDefault();\n        if (!(focusedIndex + 1 >= items.length)) newFocusedIndex += 1;\n        break;\n      case 'Enter': // Enter\n        e.preventDefault();\n        handleSelect(items[focusedIndex]);\n        break;\n      default:\n        break;\n    }\n\n    setFocusedIndex(newFocusedIndex);\n  };\n\n  return (\n    <Box sx={{ position: 'relative' }} ref={containerRef}>\n      <Input\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        onFocus={handleFocus}\n        onKeyDown={handleKeyDown}\n        {...inputProps}\n      />\n      {menuVisible && !!items.length && (\n        <Box\n          ref={menuRef}\n          {...menuProps}\n          sx={{\n            position: 'absolute',\n            bg: 'bg-2',\n            maxHeight: 300,\n            width: '100%',\n            overflow: 'auto',\n            zIndex: 2,\n            marginTop: 1,\n            borderRadius: 5,\n            boxShadow: 'large',\n            borderStyle: 'solid',\n            borderColor: 'gray5',\n            borderWidth: 1,\n            ...(menuProps?.sx || {}),\n          }}\n        >\n          {items.map((item, i) => (\n            <Box onClick={() => handleSelect(item)} key={keyExtractor(item)}>\n              {renderItem(item, i === focusedIndex)}\n            </Box>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default Autocomplete;\n"],"mappings":"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"}