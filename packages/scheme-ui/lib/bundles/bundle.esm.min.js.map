{"version":3,"file":"bundle.esm.min.js","sources":["../../../src/class/debouncer.ts","../../../src/hooks/useClickOutside.ts","../../../src/components/Box.tsx","../../../src/components/Input.tsx","../../../src/context/SchemeContext.tsx","../../../src/components/Autocomplete.tsx","../../../src/components/Text.tsx","../../../src/hooks/useColors.ts","../../../src/helpers/colors.ts","../../../src/components/Button.tsx","../../../src/hooks/useDebounce.ts","../../../src/components/Switch.tsx","../../../src/index.ts","../../../src/components/AutocompleteMenuItem.tsx","../../../src/components/Card.tsx","../../../src/components/FetchAutocomplete.tsx","../../../src/components/IconButton.tsx"],"sourcesContent":["class Debouncer {\n  timeout: ReturnType<typeof setTimeout>;\n\n  delay: number;\n\n  value: any;\n\n  constructor(initialValue = null, delay = 500) {\n    this.value = initialValue;\n    this.delay = delay;\n    this.timeout = null;\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  setValue(newValue, callback) {\n    clearTimeout(this.timeout);\n\n    this.timeout = setTimeout(() => {\n      this.value = newValue;\n      callback(newValue);\n    }, this.delay);\n  }\n}\n\nexport default Debouncer;\n","import { useEffect } from 'react';\n\n/**\n * A react hook that fires the callback when clicking outside of the referenced element\n *\n * @param {Object} ref - react reference object with a `current` property\n * @param {Function} callback - a callback function that fires when clicking outside the element\n */\nconst useOutsideClick = (ref, callback) => {\n  const handleClick = (e) => {\n    if (ref.current && !ref.current.contains(e.target)) {\n      callback(e);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClick);\n    return () => {\n      // Cleanup\n      document.removeEventListener('click', handleClick);\n    };\n  });\n};\n\nexport default useOutsideClick;\n","import React, { forwardRef } from 'react';\nimport { BoxProps as _BoxProps, Box as RebassBox, Flex as RebassFlex, FlexProps } from 'rebass/styled-components';\n\nexport type BoxProps = _BoxProps;\n\nexport const Box = forwardRef((props: BoxProps, ref) => {\n  return <RebassBox color=\"text\" {...props} ref={ref} />;\n});\n\nBox.displayName = 'Box';\n\nexport const Flex = forwardRef((props: FlexProps, ref) => <RebassFlex color=\"text\" {...props} ref={ref} />);\n\nFlex.displayName = 'Flex';\n\nexport default Box;\n","import React from 'react';\nimport { Input as _Input, InputProps } from '@rebass/forms/styled-components';\n\nconst Input = (props: InputProps) => (\n  <_Input\n    {...props}\n    sx={{\n      borderRadius: 3,\n      borderColor: 'transparent',\n      bg: 'gray5',\n      p: '0.9em',\n      color: 'gray80',\n      ...(props.sx || {}),\n    }}\n  />\n);\n\nexport default Input;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\n\ntype ColorsProps = {\n  [index: string]: string;\n};\n\ntype SchemeProps = {\n  [index: string]: ColorsProps;\n};\n\nconst SCHEMES = ['light', 'dark'] as const;\ntype SchemeType = typeof SCHEMES[number];\ntype StateType = 'auto' | 'user';\n\nconst PREFERS_COLOR_SCHEME = '(prefers-color-scheme: dark)';\n\nenum STORAGE_KEYS {\n  mode = 'settings:dark:mode',\n  value = 'settings:dark:value',\n}\n\ntype SchemeSettingsRes = [StateType | null, SchemeType | null];\nexport const getSchemeSettings = async (): Promise<SchemeSettingsRes> =>\n  (await Promise.all([\n    localStorage.getItem(STORAGE_KEYS['mode']),\n    localStorage.getItem(STORAGE_KEYS['value']),\n  ])) as SchemeSettingsRes;\n\nexport type ColorSchemeProps = {\n  scheme: SchemeType; // The current app scheme\n  userScheme: SchemeType; // The user's chosen scheme (may be different if 'auto' is true)\n  setScheme: (newScheme: SchemeType) => void;\n  auto: boolean;\n  setAuto: (newAuto: boolean) => void;\n};\n\n// The useLightDarkScheme value is always either light or dark, but the built-in\n// type suggests that it can be null. This will not happen in practice, so this\n// makes it a bit easier to work with.\nfunction useLightDarkScheme(): ColorSchemeProps {\n  const [systemScheme, setSystemScheme] = useState<SchemeType>('light');\n  const [scheme, setScheme] = useState<SchemeType>('light');\n  const [auto, setAuto] = useState(true);\n\n  // Set whether we should be using the device scheme or user's scheme\n  const handleSetAuto = (isAuto: boolean) => {\n    if (isAuto) {\n      void localStorage.setItem(STORAGE_KEYS['mode'], 'auto');\n    } else {\n      void localStorage.setItem(STORAGE_KEYS['mode'], 'user');\n    }\n\n    setAuto(isAuto);\n  };\n\n  // Set the current scheme\n  const handleSetScheme = (scheme: SchemeType) => {\n    void localStorage.setItem(STORAGE_KEYS['value'], scheme);\n    setScheme(scheme);\n  };\n\n  // Get initial stored user preference\n  const getUserPreference = async () => {\n    const [state, userScheme] = await getSchemeSettings();\n\n    if (state === 'user') {\n      if (userScheme && userScheme !== scheme) setScheme(userScheme);\n      setAuto(false);\n    }\n  };\n\n  useEffect(() => {\n    const updateSchemes = (event) => {\n      const newColorScheme = event.matches ? 'dark' : 'light';\n      setSystemScheme(newColorScheme);\n    };\n\n    void getUserPreference();\n\n    window.matchMedia(PREFERS_COLOR_SCHEME).addEventListener('change', updateSchemes);\n\n    const scheme = window.matchMedia(PREFERS_COLOR_SCHEME) ? 'dark' : 'light';\n    setSystemScheme(scheme);\n\n    return () => {\n      window.matchMedia(PREFERS_COLOR_SCHEME).removeEventListener('change', updateSchemes);\n    };\n  }, []);\n\n  return {\n    scheme: auto ? systemScheme : scheme,\n    userScheme: scheme,\n    auto,\n    setScheme: handleSetScheme,\n    setAuto: handleSetAuto,\n  };\n}\n\ntype SchemeContextProps = ColorSchemeProps & { colors: ColorsProps };\n\nconst SchemeContext = React.createContext<SchemeContextProps>({\n  colors: null,\n  scheme: 'light',\n} as SchemeContextProps);\n\nexport type SchemeProviderProps = {\n  colorSchemes?: SchemeProps;\n  theme?: { [index: string]: any };\n  scheme?: string;\n  children: React.ReactNode;\n};\n\nexport function SchemeProvider({ theme = {}, scheme = '', colorSchemes = {}, children }: SchemeProviderProps) {\n  // Get current light / dark scheme\n  const colorScheme = useLightDarkScheme();\n\n  // Use passed scheme if it exists, otherwise use light / dark, otherwise use first available scheme\n  const colors = colorSchemes[scheme] || colorSchemes[colorScheme.scheme] || colorSchemes[Object.keys(colorSchemes)[0]];\n\n  return (\n    <SchemeContext.Provider value={{ ...colorScheme, colors }}>\n      <ThemeProvider theme={{ ...theme, colors }}>{children}</ThemeProvider>\n    </SchemeContext.Provider>\n  );\n}\n\nexport const useSchemeContext = (): SchemeContextProps => useContext(SchemeContext);\n","import { InputProps } from '@rebass/forms';\nimport React, { ChangeEvent, KeyboardEvent, ReactChild, useEffect, useRef, useState } from 'react';\nimport useClickOutside from '../hooks/useClickOutside';\nimport Box, { BoxProps } from './Box';\nimport Input from './Input';\n\nexport type Item = { [index: string]: any };\n\nexport type AutocompleteProps = {\n  value: string;\n  items?: Item[];\n  placeholder?: string;\n  menuProps?: BoxProps;\n  inputProps?: InputProps;\n  keyExtractor: (item: Item) => string | number;\n  renderItem: (item: Item, hasFocus: boolean) => ReactChild;\n  onChange?: (e: ChangeEvent) => void;\n  onSelect?: (item: Item) => void;\n};\n\n/**\n * Update the scroll to show more items as the user arrows up or down\n *\n * @param {HTMLElement} el\n * @param {number} index\n */\nconst updateScroll = (el: HTMLElement, index: number): void => {\n  const parent = el;\n  if (parent?.children) {\n    const child = parent.children[index] as HTMLElement;\n    if (child) {\n      const childOffsetTop = child.offsetTop;\n      const parentScrollTop = parent.scrollTop;\n      const parentHeight = parent.offsetHeight;\n      const childHeight = child.offsetHeight;\n\n      if (childOffsetTop + childHeight > parentHeight + parentScrollTop) {\n        const scrollToY = childOffsetTop + childHeight - parentHeight;\n        parent.scrollTo(0, scrollToY);\n      } else if (childOffsetTop < parentScrollTop) {\n        parent.scrollTo(0, childOffsetTop);\n      }\n    }\n  }\n};\n\nconst Autocomplete = (props: AutocompleteProps): JSX.Element => {\n  const {\n    value,\n    placeholder,\n    items = [],\n    menuProps = {},\n    inputProps = {},\n    onChange,\n    onSelect,\n    keyExtractor,\n    renderItem,\n  } = props;\n\n  const menuRef = useRef<HTMLElement>();\n\n  const [menuVisible, setMenuVisible] = useState(false);\n  const [focusedIndex, setFocusedIndex] = useState(0);\n\n  // Handle using arrows to scroll up and down\n  useEffect(() => {\n    updateScroll(menuRef.current, focusedIndex);\n  }, [focusedIndex]);\n\n  const containerRef = useRef();\n\n  useClickOutside(containerRef, () => setMenuVisible(false));\n\n  const handleSelect = (item): void => {\n    setMenuVisible(false);\n    onSelect(item);\n  };\n\n  const handleFocus = (e): void => {\n    setMenuVisible(true);\n    inputProps.onFocus?.(e);\n  };\n\n  const handleKeyDown = (e: KeyboardEvent): void => {\n    let newFocusedIndex = focusedIndex;\n    switch (e.key) {\n      case 'ArrowUp': // Up\n        e.preventDefault();\n        if (!(focusedIndex - 1 < 0)) newFocusedIndex -= 1;\n        break;\n      case 'ArrowDown': // Down\n        e.preventDefault();\n        if (!(focusedIndex + 1 >= items.length)) newFocusedIndex += 1;\n        break;\n      case 'Enter': // Enter\n        e.preventDefault();\n        handleSelect(items[focusedIndex]);\n        break;\n      default:\n        break;\n    }\n\n    setFocusedIndex(newFocusedIndex);\n  };\n\n  return (\n    <Box sx={{ position: 'relative' }} ref={containerRef}>\n      <Input\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        onFocus={handleFocus}\n        onKeyDown={handleKeyDown}\n        {...inputProps}\n      />\n      {menuVisible && !!items.length && (\n        <Box\n          ref={menuRef}\n          {...menuProps}\n          sx={{\n            position: 'absolute',\n            bg: 'bg-2',\n            maxHeight: 300,\n            width: '100%',\n            overflow: 'auto',\n            zIndex: 2,\n            marginTop: 1,\n            borderRadius: 5,\n            boxShadow: 'large',\n            borderStyle: 'solid',\n            borderColor: 'gray5',\n            borderWidth: 1,\n            ...(menuProps?.sx || {}),\n          }}\n        >\n          {items.map((item, i) => (\n            <Box onClick={() => handleSelect(item)} key={keyExtractor(item)}>\n              {renderItem(item, i === focusedIndex)}\n            </Box>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default Autocomplete;\n","import React from 'react';\nimport { Text as _Text, TextProps } from 'rebass/styled-components';\n\nconst base = {\n  color: 'gray90',\n};\n\nexport const P = (props: TextProps) => <_Text as=\"p\" {...base} {...props} />;\n\nexport const A = (props: TextProps) => <_Text as=\"a\" fontSize={16} fontWeight={400} {...base} {...props} />;\n\nexport const H4 = (props: TextProps) => <_Text as=\"h4\" {...base} {...props} />;\n\nexport const H3 = (props: TextProps) => <_Text as=\"h3\" {...base} {...props} />;\n\nexport const H2 = (props: TextProps) => <_Text as=\"h2\" {...base} {...props} />;\n\nexport const H1 = (props: TextProps) => <_Text as=\"h1\" fontWeight={700} {...base} {...props} />;\n\nexport const Text = (props: TextProps) => <_Text {...base} {...props}  />;\n","import { useSchemeContext } from '../context/SchemeContext';\n\nexport default function useColors() {\n  const { colors } = useSchemeContext();\n\n  return colors;\n}\n","import { darken } from 'polished';\n\nexport default {\n  text: '#282C30',\n  gray5: darken(0.05, '#F8F8F8'),\n};\n","import useColors from '../hooks/useColors';\nimport { transparentize, darken } from 'polished';\nimport React from 'react';\nimport defaultColors from '../helpers/colors';\nimport { Button as RebassButton, ButtonProps as RebassButtonProps, Flex, SxProps } from 'rebass/styled-components';\n\nexport type VariantProps = {\n  [index: string]: (color: string) => SxProps;\n};\n\nexport type ButtonProps = RebassButtonProps & {\n  startIcon?: React.ReactNode;\n  endIcon?: React.ReactNode;\n  children?: React.ReactNode;\n  variant?: 'outline' | 'transparent';\n  variants?: VariantProps;\n  color?: string;\n  bg?: string;\n  enabled?: boolean;\n  disabledSx?: (bg: string) => SxProps;\n};\n\nconst TRANSPARENCY_HOVER = 0.95;\nconst TRANSPARENCY_ACTIVE = 0.92;\n\nconst outline = (color: string) => {\n  return {\n    bg: 'transparent',\n    color,\n    border: `1px solid ${transparentize(0.75, color)}`,\n\n    ':hover': {\n      bg: color ? transparentize(TRANSPARENCY_HOVER, color) : transparentize(TRANSPARENCY_HOVER, 'black'),\n    },\n    ':active': {\n      bg: color ? transparentize(TRANSPARENCY_ACTIVE, color) : transparentize(TRANSPARENCY_ACTIVE, 'black'),\n    },\n  };\n};\n\nconst transparent = (color: string) => ({\n  bg: 'transparent',\n  boxShadow: 'none',\n  color,\n\n  ':hover': {\n    bg: color ? transparentize(TRANSPARENCY_HOVER, color) : transparentize(TRANSPARENCY_HOVER, 'black'),\n  },\n  ':active': {\n    bg: color ? transparentize(TRANSPARENCY_ACTIVE, color) : transparentize(TRANSPARENCY_ACTIVE, 'black'),\n  },\n});\n\nconst disabledSx = (bg: string) => {\n  const styles = { opacity: 0.5, cursor: 'initial', bg };\n  return {\n    ...styles,\n    ':focus,:active,:hover': { ...styles },\n  };\n};\n\n// eslint-disable-next-line complexity\nexport default function Button(props: ButtonProps) {\n  const {\n    color: colorProp = 'text',\n    bg: bgProp = 'gray5',\n    variants: variantsProps = {},\n    children,\n    sx,\n    startIcon,\n    variant,\n    endIcon,\n    disabledSx: disabledSxProp,\n    disabled: disabledProp = false,\n    enabled = true,\n  } = props;\n\n  const colors = useColors();\n  const colorsMap = colors || defaultColors;\n\n  const color = colorsMap[colorProp] || colorProp;\n  const bg = colorsMap[bgProp] || bgProp;\n\n  const variants = {\n    outline,\n    transparent,\n    ...variantsProps,\n  };\n\n  const isDisabled = !enabled || disabledProp;\n  const disabledStyles = disabledSxProp || disabledSx;\n\n  return (\n    <RebassButton\n      disabled={isDisabled}\n      variant={variant}\n      px=\"1em\"\n      py=\"0.5em\"\n      {...props}\n      sx={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        cursor: 'pointer',\n        fontWeight: 'bold',\n        color,\n        bg,\n        ...sx,\n        ':focus': {\n          outline: 'none',\n          ...(sx?.[':focus'] || {}),\n        },\n        ':hover': {\n          bg: darken(0.05, bg),\n          ...(sx?.[':hover'] || {}),\n        },\n        ':active': {\n          bg: darken(0.1, bg),\n          ...(sx?.[':active'] || {}),\n        },\n        ...(isDisabled ? disabledStyles(bg) : {}),\n        ...(variants[variant]?.(color) ?? {}),\n      }}\n    >\n      {startIcon && (\n        <Flex mr={2} alignItems=\"center\">\n          {startIcon}\n        </Flex>\n      )}\n      {children}\n      {endIcon && (\n        <Flex ml={2} alignItems=\"center\">\n          {endIcon}\n        </Flex>\n      )}\n    </RebassButton>\n  );\n}\n","import { useState, useRef, useEffect } from 'react';\n\nimport Debouncer from '../class/debouncer';\n\n// Hook\nfunction useDebounce(value, delay = 500) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  const debouncer = useRef(new Debouncer(value, delay));\n\n  useEffect(\n    () => {\n      debouncer.current.setValue(value, () => {\n        setDebouncedValue(value);\n      });\n    },\n    [value, delay], // Only re-call effect if value or delay changes\n  );\n\n  return debouncedValue;\n}\n\nexport default useDebounce;\n","import React from 'react';\nimport { Switch as _Switch, SwitchProps as _SwitchProps } from '@rebass/forms/styled-components';\n\nexport type SwitchProps = _SwitchProps & {\n  color?: 'string';\n};\n\nconst Switch = (props: SwitchProps) => {\n  const { color = 'primary', disabled, checked } = props;\n  return (\n    <_Switch\n      sx={{\n        borderColor: checked ? color : 'gray10',\n        opacity: disabled ? 0.5 : 1,\n        '> div': {\n          backgroundColor: 'bg-0',\n          borderColor: checked ? color : 'gray20',\n        },\n        '&[aria-checked=false]': {\n          bg: 'gray5',\n        },\n        '&[aria-checked=true]': {\n          bg: color,\n        },\n      }}\n      {...props}\n    />\n  );\n};\n\nexport default Switch;\n","import _Debouncer from './class/debouncer';\nimport _Autocomplete from './components/Autocomplete';\nimport _AutocompleteMenuItem from './components/AutocompleteMenuItem';\nimport { Box as _Box, Flex as _Flex } from './components/Box';\nimport _Button from './components/Button';\nimport _Card from './components/Card';\nimport _FetchAutocomplete from './components/FetchAutocomplete';\nimport _IconButton from './components/IconButton';\nimport _Input from './components/Input';\nimport _Switch from './components/Switch';\nimport { Text as _Text, A as _A, H1 as _H1, H2 as _H2, H3 as _H3, H4 as _H4, P as _P } from './components/Text';\nimport _useOutsideClick from './hooks/useClickOutside';\nimport _useDebounce from './hooks/useDebounce';\nimport _useColors from './hooks/useColors';\nimport { useSchemeContext as _useSchemeContext, SchemeProvider as _SchemeProvider } from './context/SchemeContext';\n\nexport const Autocomplete = _Autocomplete;\nexport const AutocompleteMenuItem = _AutocompleteMenuItem;\nexport const Box = _Box;\nexport const Flex = _Flex;\nexport const Button = _Button;\nexport const Card = _Card;\nexport const FetchAutocomplete = _FetchAutocomplete;\nexport const IconButton = _IconButton;\nexport const Input = _Input;\nexport const Switch = _Switch;\nexport const Text = _Text;\nexport const P = _P;\nexport const H1 = _H1;\nexport const H2 = _H2;\nexport const H3 = _H3;\nexport const H4 = _H4;\nexport const A = _A;\n\nexport const Debouncer = _Debouncer;\n\nexport const useClickOutside = _useOutsideClick;\nexport const useColors = _useColors;\nexport const useDebounce = _useDebounce;\nexport const useSchemeContext = _useSchemeContext;\n\nexport const SchemeProvider = _SchemeProvider;\n","import React from 'react';\nimport { SxProps } from 'rebass';\nimport { P } from './Text';\n\nexport type AutocompleteMenuItemProps = {\n  text: string;\n  onSelect?: (item: any) => void;\n  sx?: SxProps;\n  focused?: boolean;\n};\n\nconst AutocompleteMenuItem = (props: AutocompleteMenuItemProps) => {\n  const { onSelect, text, focused, sx = {} } = props;\n  return (\n    <P\n      p={2}\n      sx={{\n        cursor: 'pointer',\n        ':hover': {\n          bg: 'gray10',\n        },\n        ...(focused\n          ? {\n              bg: 'gray10',\n            }\n          : {}),\n        ...{ sx },\n      }}\n      onClick={onSelect}\n    >\n      {text}\n    </P>\n  );\n};\n\nexport default AutocompleteMenuItem;\n","import React from 'react';\nimport { BoxProps } from 'rebass';\nimport Box from './Box';\n\nexport type CardProps = BoxProps & {\n  boxShadow?: 'small' | 'large';\n};\n\nconst Card = (props: CardProps) => {\n  const { boxShadow = 'large' } = props;\n  return (\n    <Box\n      p={[3, 4]}\n      bg=\"bg-0\"\n      color=\"text\"\n      {...props}\n      sx={{\n        boxShadow,\n        borderRadius: 10,\n        ...(props.sx || {}),\n      }}\n    />\n  );\n};\n\nexport default Card;\n","import React, { useEffect, useState } from 'react';\nimport useDebounce from '../hooks/useDebounce';\nimport Autocomplete, { AutocompleteProps, Item } from './Autocomplete';\n\ntype Props = AutocompleteProps & {\n  onSelect: (item: Item) => void;\n  debounce?: number;\n  formatResponse?: (data: any) => any[];\n  request: (value: string) => Promise<any>;\n};\n\nconst FetchAutocomplete = (props: Props) => {\n  const { onSelect, request, formatResponse, debounce = 500 } = props;\n\n  const [autocompleteItems, setAutocompleteItems] = useState([]);\n\n  const debouncedValue = useDebounce(props.value, debounce);\n\n  const search = async (val: string) => {\n    const res = await request(val);\n\n    if (res) {\n      const newItems = formatResponse(res);\n      setAutocompleteItems(newItems);\n    }\n  };\n\n  useEffect(() => {\n    search(debouncedValue);\n  }, [debouncedValue]);\n\n  return <Autocomplete {...props} items={autocompleteItems} onSelect={onSelect} />;\n};\n\nexport default FetchAutocomplete;\n","import React, { ReactNode } from 'react';\nimport Button, { ButtonProps } from './Button';\n\ntype Props = ButtonProps & {\n  icon: ReactNode;\n  round?: boolean;\n  iconSize?: number | string;\n};\n\nexport default function IconButton(props: Props) {\n  const { icon, sx, round, iconSize = 24, onClick, ...rest } = props;\n\n  return (\n    <Button\n      {...rest}\n      onClick={onClick}\n      sx={{\n        fontSize: iconSize,\n        width: '1.75em',\n        height: '1.75em',\n        padding: 0,\n        ...(round ? { borderRadius: 50 } : {}),\n        ...sx,\n      }}\n    >\n      {icon}\n    </Button>\n  );\n}\n"],"names":["Debouncer","initialValue","delay","value","timeout","prototype","getValue","this","setValue","newValue","callback","_this","clearTimeout","setTimeout","useOutsideClick","ref","handleClick","e","current","contains","target","useEffect","document","addEventListener","removeEventListener","Box","forwardRef","props","React","createElement","RebassBox","__assign","color","displayName","Flex","RebassFlex","STORAGE_KEYS","Input","_Input","sx","borderRadius","borderColor","bg","p","Autocomplete","placeholder","_a","items","_b","menuProps","_c","inputProps","onChange","onSelect","keyExtractor","renderItem","menuRef","useRef","_d","useState","menuVisible","setMenuVisible","_e","focusedIndex","setFocusedIndex","el","index","parent","children","child","childOffsetTop","offsetTop","parentScrollTop","scrollTop","parentHeight","offsetHeight","childHeight","scrollToY","scrollTo","updateScroll","containerRef","useClickOutside","handleSelect","item","position","onFocus","call","onKeyDown","newFocusedIndex","key","preventDefault","length","maxHeight","width","overflow","zIndex","marginTop","boxShadow","borderStyle","borderWidth","map","i","onClick","base","P","_Text","as","SchemeContext","createContext","colors","scheme","useSchemeContext","useContext","useColors","defaultColors","text","gray5","darken","outline","border","transparentize","transparent","disabledSx","styles","opacity","cursor","Button","colorProp","bgProp","variants","variantsProps","startIcon","variant","endIcon","disabledSxProp","_f","disabled","disabledProp","_g","enabled","colorsMap","isDisabled","disabledStyles","RebassButton","px","py","display","alignItems","justifyContent","fontWeight","mr","ml","useDebounce","debouncedValue","setDebouncedValue","debouncer","_Autocomplete","AutocompleteMenuItem","focused","_Box","_Flex","_Button","Card","FetchAutocomplete","request","formatResponse","debounce","autocompleteItems","setAutocompleteItems","val","__awaiter","res","sent","newItems","IconButton","icon","round","iconSize","rest","__rest","fontSize","height","padding","Switch","checked","_Switch","backgroundColor","Text","_P","H1","H2","H3","H4","A","_Debouncer","_useOutsideClick","_useColors","_useDebounce","_useSchemeContext","SchemeProvider","theme","colorSchemes","colorScheme","systemScheme","setSystemScheme","setScheme","auto","setAuto","getUserPreference","Promise","all","localStorage","getItem","state","userScheme","updateSchemes","event","newColorScheme","matches","window","matchMedia","setItem","isAuto","useLightDarkScheme","Object","keys","Provider","ThemeProvider"],"mappings":"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"}